package br.com.triadworks.leilaoweb.model;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Feb 01 12:15:35 BRT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LanceImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Id,
        CupomNumero,
        DataCriacao,
        Valor,
        FuncionarioId,
        PromocaoId,
        Promocao,
        Funcionario;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int CUPOMNUMERO = AttributesEnum.CupomNumero.index();
    public static final int DATACRIACAO = AttributesEnum.DataCriacao.index();
    public static final int VALOR = AttributesEnum.Valor.index();
    public static final int FUNCIONARIOID = AttributesEnum.FuncionarioId.index();
    public static final int PROMOCAOID = AttributesEnum.PromocaoId.index();
    public static final int PROMOCAO = AttributesEnum.Promocao.index();
    public static final int FUNCIONARIO = AttributesEnum.Funcionario.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LanceImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("br.com.triadworks.leilaoweb.model.Lance");
    }


    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public Long getId() {
        return (Long) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(Long value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for CupomNumero, using the alias name CupomNumero.
     * @return the value of CupomNumero
     */
    public String getCupomNumero() {
        return (String) getAttributeInternal(CUPOMNUMERO);
    }

    /**
     * Sets <code>value</code> as the attribute value for CupomNumero.
     * @param value value to set the CupomNumero
     */
    public void setCupomNumero(String value) {
        setAttributeInternal(CUPOMNUMERO, value);
    }

    /**
     * Gets the attribute value for DataCriacao, using the alias name DataCriacao.
     * @return the value of DataCriacao
     */
    public Timestamp getDataCriacao() {
        return (Timestamp) getAttributeInternal(DATACRIACAO);
    }


    /**
     * Gets the attribute value for Valor, using the alias name Valor.
     * @return the value of Valor
     */
    public BigDecimal getValor() {
        return (BigDecimal) getAttributeInternal(VALOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for Valor.
     * @param value value to set the Valor
     */
    public void setValor(BigDecimal value) {
        setAttributeInternal(VALOR, value);
    }

    /**
     * Gets the attribute value for FuncionarioId, using the alias name FuncionarioId.
     * @return the value of FuncionarioId
     */
    public Long getFuncionarioId() {
        return (Long) getAttributeInternal(FUNCIONARIOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FuncionarioId.
     * @param value value to set the FuncionarioId
     */
    public void setFuncionarioId(Long value) {
        setAttributeInternal(FUNCIONARIOID, value);
    }

    /**
     * Gets the attribute value for PromocaoId, using the alias name PromocaoId.
     * @return the value of PromocaoId
     */
    public Long getPromocaoId() {
        return (Long) getAttributeInternal(PROMOCAOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PromocaoId.
     * @param value value to set the PromocaoId
     */
    public void setPromocaoId(Long value) {
        setAttributeInternal(PROMOCAOID, value);
    }

    /**
     * @return the associated entity PromocaoImpl.
     */
    public PromocaoImpl getPromocao() {
        return (PromocaoImpl) getAttributeInternal(PROMOCAO);
    }

    /**
     * Sets <code>value</code> as the associated entity PromocaoImpl.
     */
    public void setPromocao(PromocaoImpl value) {
        setAttributeInternal(PROMOCAO, value);
    }


    /**
     * @return the associated entity FuncionarioImpl.
     */
    public FuncionarioImpl getFuncionario() {
        return (FuncionarioImpl) getAttributeInternal(FUNCIONARIO);
    }

    /**
     * Sets <code>value</code> as the associated entity FuncionarioImpl.
     */
    public void setFuncionario(FuncionarioImpl value) {
        setAttributeInternal(FUNCIONARIO, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Long id) {
        return new Key(new Object[] { id });
    }

    /**
     * Valida lance
     */
    public boolean validateLance() {

        int total = 0;
        
        RowIterator lances = getPromocao().getLances();
        while (lances.hasNext()) {
            LanceImpl lance = (LanceImpl) lances.next();
            if (lance.getFuncionarioId().equals(this.getFuncionarioId())) {
                total++;
            }
        }
        
        if (total > 3) {
            return false;
        }

        return true;
    }


    /**
     * Metodo invocado pelo ADF sempre que se cria uma instancia nova da entidade
     */
     protected void create(AttributeList attributeList) {
         super.create(attributeList);
         // preenche campo com valor da sequence
         SequenceImpl sequence = new SequenceImpl("SEQ_LANCE", getDBTransaction());
         setId(sequence.getSequenceNumber().longValue());
     }
}

