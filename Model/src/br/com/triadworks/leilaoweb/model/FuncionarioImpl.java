package br.com.triadworks.leilaoweb.model;

import oracle.jbo.AttributeDef;
import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jan 27 16:31:19 GFT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FuncionarioImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Id,
        Cpf,
        Email,
        Nome;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int CPF = AttributesEnum.Cpf.index();
    public static final int EMAIL = AttributesEnum.Email.index();
    public static final int NOME = AttributesEnum.Nome.index();

    /**
     * This is the default constructor (do not remove).
     */
    public FuncionarioImpl() {
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public Long getId() {
        return (Long) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(Long value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for Cpf, using the alias name Cpf.
     * @return the value of Cpf
     */
    public String getCpf() {
        return (String) getAttributeInternal(CPF);
    }

    /**
     * Sets <code>value</code> as the attribute value for Cpf.
     * @param value value to set the Cpf
     */
    public void setCpf(String value) {
        setAttributeInternal(CPF, value);
    }

    /**
     * Gets the attribute value for Email, using the alias name Email.
     * @return the value of Email
     */
    public String getEmail() {
        return (String) getAttributeInternal(EMAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Email.
     * @param value value to set the Email
     */
    public void setEmail(String value) {
        setAttributeInternal(EMAIL, value);
    }

    /**
     * Gets the attribute value for Nome, using the alias name Nome.
     * @return the value of Nome
     */
    public String getNome() {
        return (String) getAttributeInternal(NOME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Nome.
     * @param value value to set the Nome
     */
    public void setNome(String value) {
        setAttributeInternal(NOME, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Long id) {
        return new Key(new Object[] { id });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("br.com.triadworks.leilaoweb.model.Funcionario");
    }

    /**
     * Metodo invocado pelo ADF sempre que se cria uma instancia nova da entidade
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        // preenche campo com valor da sequence
        SequenceImpl sequence = new SequenceImpl("SEQ_FUNCIONARIO", getDBTransaction());
        setId(sequence.getSequenceNumber().longValue());
    }
}

